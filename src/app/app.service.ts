import { Injectable } from '@angular/core';
import { HttpClient, HttpHeaders } from '@angular/common/http';
import { of, Observable } from 'rxjs';
import { map, catchError } from 'rxjs/operators';

@Injectable({
  providedIn: 'root'
})
export class AppService {

  apiEndpoint = 'https://private-cc77e-aff.apiary-mock.com/posts';


  constructor(
    private httpClient: HttpClient
  ) {}


  private extractData(res: Response) {
    let body = res;
    return body || { };
  }

  getData(): Observable<any> {
    return this.httpClient
    .get(this.apiEndpoint)
    .pipe(map(this.extractData));
  }


  getPostFilters() {
    // Currently hard coded but could be generated by looking at data coming back from api and getting the unique service names from the data
    // Chosen to hard code filters as paginated data could mean an incomplete list of filters is generated from the data received initially from the api

    return [
      {
        name: 'Manual',
        enabled: true
      },
      {
        name: 'Instagram',
        enabled: true
      },
      {
        name: 'Twitter',
        enabled: true
      }
    ];
  }
}
